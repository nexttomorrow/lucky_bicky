rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 사용자 컬렉션 규칙
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
      
      // 관리자만 사용자 등급을 변경할 수 있음
      allow update: if request.auth != null && 
        request.auth.uid == userId && 
        (!request.resource.data.diff(resource.data).affectedKeys().hasAny(['role', 'roleUpdatedAt']));
    }
    
    // 운세 컬렉션 규칙
    match /fortunes/{fortuneId} {
      allow read: if request.auth != null && 
        fortuneId.matches(request.auth.uid + '_.*');
      allow write: if request.auth != null && 
        fortuneId.matches(request.auth.uid + '_.*');
    }
    
    // 프리미엄 컨텐츠 접근 규칙
    match /premiumContent/{docId} {
      function isPremiumUser() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['PREMIUM', 'VIP'];
      }
      
      allow read: if request.auth != null && isPremiumUser();
    }

    // VIP 전용 컨텐츠 접근 규칙
    match /vipContent/{docId} {
      function isVIPUser() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'VIP';
      }
      
      allow read: if request.auth != null && isVIPUser();
    }

    // 공통 컨텐츠 접근 규칙
    match /commonContent/{docId} {
      allow read: if request.auth != null;
    }

    // 구독 관련 규칙 추가
    match /subscriptions/{subscriptionId} {
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow write: if false; // 서버 사이드에서만 처리
    }

    // 결제 관련 규칙 추가
    match /payments/{paymentId} {
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow write: if false; // 서버 사이드에서만 처리
    }
  }
} 